Q1: Which registers contain arguments to functions? For example, which register holds 13 in main's call to printf?
A1: a0-a7, a2 (li a2,13)

Q2: Where is the call to function f in the assembly code for main? Where is the call to g? (Hint: the compiler may inline functions.)
A2: None, g is inlined in f and f is inlined in main

Q3: At what address is the function printf located?
A3: 0x64a, according to script `34: 61a080e7 jalr 1562(ra) # 64a <printf>` or `000000000000064a <printf>:`

Q4: What value is in the register ra just after the jalr to printf in main?
A4: 0x38

Q5: Run the following code.
        unsigned int i = 0x00646c72;
        printf("H%x Wo%s", 57616, &i);
    What is the output?
    The output depends on that fact that the RISC-V is little-endian. If the RISC-V were instead big-endian what would you set i to in order to yield the same output? Would you need to change 57616 to a different value?
A5: He110 World; 0x726c6400; no

Q6: In the following code, what is going to be printed after 'y='? (note: the answer is not a specific value.) Why does this happen?
	    printf("x=%d y=%d", 3);
A6: x=3 y=19980826; The answer is not a specific value because the value of y depends on register a2 (after a1), which is not specified in the printf call.
